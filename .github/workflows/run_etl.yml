name: Run Reindeer Games ETL

permissions:
  contents: write

on:
  workflow_dispatch:    # this enables the "Run workflow" button
  push:
    branches: 
      - main        # run when code is pushed to main
  schedule:
    - cron: '0 11-23 * * *'  # runs 6am–6pm Central
    - cron: '0 0-3 * * *'    # 6pm–10pm Central

jobs:
  etl:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Install dependencies (if you have a requirements.txt)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mysql-connector-python
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 4. Run your ETL
      - name: Run ETL
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          python run_etl.py
      
      # 5. Measure and record repo size
      - name: Record repository size
        run: |
          echo "Measuring repository size..."
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          SIZE_INFO=$(git count-objects -vH | grep "size-pack" | awk '{print $2, $3}')
          echo "$TIMESTAMP | Repo size: $SIZE_INFO" >> repo_size_log.txt
          echo "Logged repo size: $SIZE_INFO"

      # Optional: Commit & push the new CSVs and manifest if you want them back in GitHub
      - name: Commit and push reports
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Stage all changes
          git add -A data/ repo_size_log.txt
          
          # Commit if there are changes
          git commit -m "Update ETL reports [skip ci]" || echo "No changes to commit"
          
          # Push back to repo
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
